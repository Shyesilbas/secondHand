spring.application.name=secondHand

#Server
server.port=8080

#DB CONFIG
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=update

#DATE TIME CONFIG
spring.jackson.date-format=dd/MM/yyyy HH:mm
spring.jackson.time-zone=GMT+3
spring.jackson.locale=tr_TR

#Jackson Hibernate Config
spring.jackson.serialization.fail-on-empty-beans=false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

#Token
jwt.secretKey=${jwt_secretKey}
jwt.accessToken.expiration=29900000
jwt.refreshToken.expiration=604800000

#Swagger
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

#Email
app.email.sender=secondhand@noreply.com

#Email Templates
app.email.verification.subject=SecondHand - Account Verification Code
app.email.verification.content=Hello %s,Please use the following code to verify your SecondHand account: Verification Code: %s This code is valid for 15 minutes.If you did not request this verification, please ignore this email. Best regards, SecondHand Team

app.email.welcome.subject=Welcome to SecondHand!
app.email.welcome.content=Hello %s,Welcome to SecondHand! Your account has been successfully created. You can now: Sell your second-hand items Purchase items you like Communicate safely with other users Happy shopping! SecondHand Team

app.email.phoneUpdate.subject=SecondHand - Phone Number updated
app.email.phoneUpdate.content=Hello %s,your phone number has been updated. If you did not make this change, please contact us immediately.

#Listing Fees
app.listing.creation.fee=50.00
app.listing.promotion.fee=25.00
app.listing.fee.tax=18.00

app.email.paymentSuccess.subject=SecondHand - Payment Successful
app.email.paymentSuccess.content=Hello %s,\nYour payment for the listing titled "%s" has been successfully processed.\nPayment Details:\nAmount: %s\nTransaction Type: %s\nThank you for using SecondHand!\nBest regards,\nSecondHand Team


spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_SCOPE}
spring.security.oauth2.client.registration.google.redirect-uri=${REDIRECT_URI}

spring.security.oauth2.client.provider.google.issuer-uri=${ISSUER_URI}


# Debug log iï¿½in
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.security.oauth2.client=DEBUG
logging.level.org.springframework.security.oauth2.core=DEBUG
